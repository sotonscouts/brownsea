# Generated by Django 5.2.3 on 2025-06-23 21:17

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0003_add_author_snippet"),
        ("wagtailcore", "0094_alter_page_locale"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="NewsIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("introduction", models.TextField()),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="NewsType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name": "News Type",
                "verbose_name_plural": "News Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ArticlePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        blank=True,
                        help_text="The date the article was published. If not set, the current date will be used.",
                        null=True,
                        verbose_name="Publication date",
                    ),
                ),
                (
                    "introduction",
                    models.TextField(help_text="The introduction for this article. Will be shown in article listings."),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("accordion", 4),
                            ("heading", 5),
                            ("text", 6),
                            ("quote", 9),
                            ("warning_callout", 12),
                            ("call_to_action", 13),
                            ("links", 20),
                            ("image", 23),
                            ("table", 24),
                            ("document", 25),
                        ],
                        block_lookup={
                            0: ("wagtail.blocks.CharBlock", (), {"required": True}),
                            1: ("wagtail.blocks.RichTextBlock", (), {"required": True}),
                            2: (
                                "wagtail.blocks.StructBlock",
                                [[("heading", 0), ("content", 1)]],
                                {},
                            ),
                            3: ("wagtail.blocks.ListBlock", (2,), {}),
                            4: ("wagtail.blocks.StructBlock", [[("sections", 3)]], {}),
                            5: ("wagtail.blocks.StructBlock", [[("heading", 0)]], {}),
                            6: ("brownsea.core.blocks.RichTextBlock", (), {}),
                            7: ("wagtail.blocks.TextBlock", (), {"required": True}),
                            8: ("wagtail.blocks.CharBlock", (), {"required": False}),
                            9: (
                                "wagtail.blocks.StructBlock",
                                [[("quote", 7), ("author", 8)]],
                                {},
                            ),
                            10: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "help_text": "A short, clearly worded heading.",
                                    "required": True,
                                },
                            ),
                            11: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "help_text": "Make the callout concise, specific and self-contained.",
                                    "required": True,
                                },
                            ),
                            12: (
                                "wagtail.blocks.StructBlock",
                                [[("heading", 10), ("content", 11)]],
                                {},
                            ),
                            13: (
                                "wagtail.snippets.blocks.SnippetChooserBlock",
                                ("core.CallToAction",),
                                {
                                    "group": "2. Callouts",
                                    "icon": "megaphone",
                                    "template": "components/streamfield/blocks/call_to_action_block.html",
                                },
                            ),
                            14: ("wagtail.blocks.PageChooserBlock", (), {}),
                            15: ("wagtail.blocks.StructBlock", [[("page", 14)]], {}),
                            16: ("wagtail.blocks.URLBlock", (), {}),
                            17: ("wagtail.blocks.CharBlock", (), {}),
                            18: ("wagtail.blocks.RichTextBlock", (), {}),
                            19: (
                                "wagtail.blocks.StructBlock",
                                [[("url", 16), ("title", 17), ("description", 18)]],
                                {},
                            ),
                            20: (
                                "wagtail.blocks.StreamBlock",
                                [[("page", 15), ("external_link", 19)]],
                                {},
                            ),
                            21: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"required": True},
                            ),
                            22: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "choices": [
                                        ("small", "Small (400px)"),
                                        ("medium", "Medium (600px)"),
                                        ("large", "Large (800px)"),
                                    ],
                                    "help_text": "Choose the size that best fits your content. Small for inline images, medium for standard content, large for featured images.",  # noqa: E501
                                },
                            ),
                            23: (
                                "wagtail.blocks.StructBlock",
                                [[("image", 21), ("size", 22), ("caption", 8)]],
                                {},
                            ),
                            24: ("brownsea.core.blocks.TableBlock", (), {}),
                            25: (
                                "wagtail.documents.blocks.DocumentChooserBlock",
                                (),
                                {
                                    "group": "3. Media & Embeds",
                                    "icon": "doc-full-inverse",
                                    "template": "components/streamfield/blocks/document_block.html",
                                },
                            ),
                        },
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.author",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        help_text="The main image for this article. Will be shown at the top of the article and in article listings.",  # noqa: E501
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "news_type",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="news.newstype"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
    ]
